{"version":3,"sources":["./src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion-routing.module.ts","./src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion.page.ts","./src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion.page.scss","./src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion.page.html","./src/app/pages/Inventarios/ivt-configuracion/ivt-configuracion.module.ts"],"names":[],"mappings":"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","file":"Inventarios-ivt-configuracion-ivt-configuracion-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IvtConfiguracionPage } from './ivt-configuracion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IvtConfiguracionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IvtConfiguracionPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { InicioService } from '../../../providers/Almacenamiento/inicio.service';\nimport { InventariosService } from '../../../providers/Api/Inventarios.service';\nimport { ToastServices } from '../../../providers/Utilidades/ToastService.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-ivt-configuracion',\n  templateUrl: './ivt-configuracion.page.html',\n  styleUrls: ['./ivt-configuracion.page.scss'],\n})\nexport class IvtConfiguracionPage implements OnInit {\n\n  nombre = '';\n  cambio = false;\n\n  constructor(\n    private almacenamiento: InicioService,\n    private ivtApi: InventariosService,\n    private toast: ToastServices,\n    private activeRoute: ActivatedRoute,\n    private alertCtrl: AlertController,\n    private router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  ionViewWillEnter() {\n    this.cargarCategorias();\n  }\n\n  refrescando( event ) {\n    this.cargarCategorias().then(() => {\n      event.target.complete()\n    }).catch(() => event.target.complete())\n  }\n\n  async cargarCategorias() {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.ivtApi.leerInventario(info.token, this.activeRoute.snapshot.paramMap.get('id')).subscribe((data: any) => {\n          if (data.exe) {\n              this.nombre = data.response.name;\n          } else {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n          }\n        }, (err) => {\n            this.toast.toastError('No se pudo cargar los datos, intentelo más tarde');\n        })\n      }\n  }\n\n  toggle( event ) {\n    // console.log(event)\n    this.cambio = event.detail.checked;\n  }\n\n  async guardar() {\n    if (this.cambio) {\n        const alert = await this.alertCtrl.create({\n          header: 'Cerrar periodo',\n          message: 'Al cerrar el periodo de inventario comezará un nuevo periodo a partir de ahora. Esta acción no se puede revsersar',\n          buttons: [\n            {\n              text: 'cancelar',\n              role: 'cancel'\n            },\n            {\n              text: 'Aceptar',\n              handler: () => {\n                this.actualizar(true);\n              }\n            }\n          ]\n        })\n\n        await alert.present();\n    } else {\n      this.actualizar(false);\n    }\n  }\n\n  async actualizar(bool) {\n      const info = await this.almacenamiento.obtenerToken();\n\n      if ( info ) {\n        this.ivtApi.actualizarInventario(info.token, {ivt: this.activeRoute.snapshot.paramMap.get('id'), nombre: this.nombre, exe: bool}).subscribe((data: any) => {\n          if ( data.exe ) {\n            this.toast.toastExitoso('Información actualizada!');\n            this.router.navigate(['/central/menu/ivt-miinventario', this.activeRoute.snapshot.paramMap.get('id')]);\n          } else {\n            this.toast.toastError('No se pudo actualizar el inventario, intentelo más tarde');\n          }\n        }, (err) => {\n          this.toast.toastError('No se pudo actualizar el inventario, intentelo más tarde');\n        })\n      }\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpdnQtY29uZmlndXJhY2lvbi5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar color=\\\"success\\\">\\n        <ion-back-button slot=\\\"start\\\" icon=\\\"chevron-back-outline\\\" defaultHref=\\\"/central/menu/ivt-inicio\\\"></ion-back-button>\\n        <ion-title>Configuración</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <div class=\\\"divider\\\"></div>\\n    <ion-list>\\n        <ion-item mode=\\\"ios\\\">\\n            <ion-label position=\\\"floating\\\">\\n                Nombre del Inventario\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"nombre\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item mode=\\\"ios\\\">\\n            <ion-label class=\\\"ion-text-wrap\\\">\\n                Cerrar periodo de inventario\\n            </ion-label>\\n            <ion-toggle slot=\\\"end\\\" color=\\\"tertiary\\\" (ionChange)=\\\"toggle( $event )\\\"></ion-toggle>\\n        </ion-item> <br>\\n\\n        <ion-button color=\\\"light\\\" expand=\\\"block\\\" mode=\\\"ios\\\" shape=\\\"round\\\" (click)=\\\"guardar()\\\">Guardar Cambios</ion-button>\\n    </ion-list>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IvtConfiguracionPageRoutingModule } from './ivt-configuracion-routing.module';\n\nimport { IvtConfiguracionPage } from './ivt-configuracion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IvtConfiguracionPageRoutingModule\n  ],\n  declarations: [IvtConfiguracionPage]\n})\nexport class IvtConfiguracionPageModule {}\n"],"sourceRoot":"webpack:///"}